package ru.parmacoworking.entity;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "user", schema = "coworking")
@NoArgsConstructor
@Getter
@Setter
public class User {

    @Id
    @Column(name = "id", nullable = false)
    private Long id;

    @Column(name = "surname", nullable = false)
    private String surname;

    @Column(name = "first_name", nullable = false)
    private String first_name;

    @Column(name = "last_name", nullable = false)
    private String last_name;

    @Column(name = "email", nullable = false)
    private String email;

    @Column(name = "password", nullable = false)
    private String password;

    @Column(name = "phone_number", nullable = false)
    private String phone_number;

    @Column(name = "photo", nullable = false)
    private String photo;

    @Column(name = "form_of_work", nullable = false)
    private String form_of_work;

    public Long getId() {
        return id;
    }


    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name = "user_type_ref", joinColumns = {@JoinColumn(name = "user_id", referencedColumnName = "id")},
            inverseJoinColumns = {@JoinColumn(name = "user_type_id", referencedColumnName = "id")})

    private Set<User_type> user_type = new HashSet<>();

    @OneToMany(mappedBy = "user")
    Set<User_job_title_ref> user_job_title_refs;

    @OneToMany(mappedBy="user")
    private Set<Reservation> reservation;


}
